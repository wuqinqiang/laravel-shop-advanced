<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Category extends Model
{
    protected $fillable = ['name', 'is_directory', 'level', 'path'];
    protected $casts = [
        'is_directory' => 'boolean',
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        //监听模型的创建事件  初始化path以及level字段值
        static::creating(function (Category $category) {
            //顶级分类
            if (is_null($category->parent_id)) {
                //层级0
                $category->level = 0;
                //path '-';
                $category->path = '-';
            } else {
                $category->level = $category->parent->level + 1;
                $category->path = $category->parent->path . $category->parent_id . '-';
            }
        });
    }

    public function parent()
    {
        return $this->belongsTo(Category::class);
    }

    public function children()
    {
        return $this->hasMany(Category::class, 'parent_id');
    }

    public function products()
    {
        return $this->hasMany(Product::class);
    }

    //定义一个访问器,获取所有祖先类目的id值
    public function getPathIdsAttributes()
    {
        return array_filter(explode('-', trim($this->path, '-')));
    }

    //定义一个访问器,获取所有祖先类目并按层级排序
    public function getAncestorsAttributes()
    {
        return Category::query()
            ->whereIn('id', $this->path_ids)
            ->orderBy('level', 'desc')
            ->get();
    }

    // 定义一个访问器，获取以 - 为分隔的所有祖先类目名称以及当前类目的名称
    public function getFullNameAttribute()
    {
        return $this->ancestors()  // 获取所有祖先类目
            ->pluck('name')       // 取出所有祖先类目的 name 字段作为一个数组
            ->push($this->name)   // 将当前类目的 name 字段值加到数组的末尾
            ->implode('-');       // 用 - 符号将数组的值组装成一个字符串
    }
}
